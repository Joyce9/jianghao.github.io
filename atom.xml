<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jianghao Wang]]></title>
  <subtitle><![CDATA[Writing 1000 Words a Day Changes My Life]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jianghao.wang/"/>
  <updated>2015-05-12T03:15:24.281Z</updated>
  <id>http://jianghao.wang/</id>
  
  <author>
    <name><![CDATA[Jianghao]]></name>
    <email><![CDATA[wangjh@lreis.ac.cn]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Install Ghost on Linode]]></title>
    <link href="http://jianghao.wang/2015/ghost-linode/"/>
    <id>http://jianghao.wang/2015/ghost-linode/</id>
    <published>2015-05-12T02:00:00.000Z</published>
    <updated>2015-05-12T03:15:24.281Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.linode.com" target="_blank" rel="external">Linode.com</a> is a popular choice for a VPS hosting. This post will walk through how to install <a href="http://ghost.org" target="_blank" rel="external">Ghost</a> on Linode.</p>
<h2 id="Install">Install</h2><h3 id="Install_Node">Install Node</h3><p>Setup with Ubuntu, then install with Ubuntu<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sL http<span class="variable">s:</span>//<span class="keyword">deb</span>.nodesource.<span class="keyword">com</span>/setup | sudo bash -</span><br><span class="line">sudo apt-<span class="built_in">get</span> install -<span class="keyword">y</span> nodejs</span><br><span class="line">node -<span class="keyword">v</span></span><br><span class="line">npm -<span class="keyword">v</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Install_nginx">Install nginx</h3><pre><code>apt-<span class="keyword">get</span> install nginx
</code></pre><h3 id="Download_and_Install_Ghost">Download and Install Ghost</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -<span class="tag">p</span> /var/www/</span><br><span class="line">cd /var/www/</span><br><span class="line">wget -O ghost<span class="class">.zip</span> https:<span class="comment">//ghost.org/zip/ghost-latest.zip</span></span><br><span class="line">unzip -d ghost ghost<span class="class">.zip</span></span><br><span class="line">cd ghost</span><br><span class="line">npm install --production</span><br><span class="line">cp config<span class="class">.example</span><span class="class">.js</span> config.js</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Deploy">Deploy</h2><p>Edit your <code>config.js</code> file. In the production section replace the following: </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">host</span>:<span class="value"> <span class="string">'127.0.0.1'</span>,</span></span></span><br></pre></td></tr></table></figure>
<p>with</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">host</span>:<span class="value"> <span class="string">'[your Linode public IP]'</span>,</span></span></span><br></pre></td></tr></table></figure>
<p>Create Ghost User, and start ghost<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd ghost</span><br><span class="line">chown -R <span class="string">ghost:</span>ghost <span class="regexp">/var/</span>www<span class="regexp">/ghost/</span></span><br><span class="line">cd <span class="regexp">/var/</span>www<span class="regexp">/ghost/</span></span><br><span class="line">npm start --production</span><br></pre></td></tr></table></figure></p>
<h3 id="Keep_Ghost_Running">Keep Ghost Running</h3><ul>
<li><a href="http://www.allaboutghost.com/keep-ghost-running-with-pm2/" target="_blank" rel="external">Keep Ghost Running with PM2</a></li>
<li><p>or <a href="http://docs.ghostchina.com/zh/installation/deploy/" target="_blank" rel="external">Keep Ghost Running with <code>Forever</code></a></p>
<ul>
<li>Install forever: <code>npm install forever -g</code></li>
<li>Deploy: <code>cd /var/www/ghost/ &amp;&amp; NODE_ENV=production forever start index.js</code></li>
<li>Stop forever <code>forever stop index.js</code></li>
<li>Check whether it is running: <code>forever list</code></li>
</ul>
</li>
</ul>
<h2 id="Ghost_setup">Ghost setup</h2><p>Visiting <code>http://your ip address:2368/ghost/</code> will show <strong>Welcome to your new Ghost blog</strong>. </p>
<p>There you have it, Node.js is installed, Ghost files are located in <code>/var/www/ghost</code>, and Ghost has been started. You can keep Ghost the way it is if you do not mind adding <code>:2368</code> to the end of your url, but we would highly recommend you check out the following two articles to help get your Ghost blog fully ready:</p>
<ul>
<li><a href="https://allaboutghost.com/how-to-proxy-port-80-to-2368-for-ghost-with-nginx/" target="_blank" rel="external">How to Proxy Port 80 to 2368 for Ghost with Nginx</a></li>
</ul>
<p>With <code>Nginx</code> installed, we now need to tell Nginx that Ghost is ready for requests on port 2368. New Nginx configuration files can be added into <code>/etc/nginx/conf.d/</code>. We would recommend creating your configuration file in this directory and naming it something meaningful, like: <code>your-domain-name.conf</code>. Once you have created your new Nginx conf file place the following into your file, replacing your-domain-name.conf.com with your domain name:</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /etc/nginx/<span class="keyword">conf</span>.<span class="keyword">d</span>/</span><br><span class="line"><span class="keyword">ls</span></span><br><span class="line">vim jianghao.wang.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>add following to <code>jianghao.wang.conf</code></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">server</span> &#123;</span><br><span class="line">    <span class="title">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="title">server_name</span> **ip addess**;</span><br><span class="line">    <span class="title">location</span> / &#123;</span><br><span class="line">        <span class="title">proxy_set_header</span>   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="title">proxy_set_header</span>   Host      <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="title">proxy_pass</span>         <span class="url">http://127.0.0.1:2368</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If you find a sample Nginx configuration files found in /etc/nginx/conf.d/, I would recommend <strong>deleting</strong> them. Now restart Nginx to make your changes take affect: </p>
<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm </span><br><span class="line">sudo <span class="keyword">service</span> nginx <span class="literal">restart</span></span><br></pre></td></tr></table></figure>
<p>Your Ghost blog is now reachable via your domain name, on port 80, through Nginx to port 2368.</p>
<hr>
<h2 id="Reference:">Reference:</h2><blockquote>
<ol>
<li><a href="http://www.howtoinstallghost.com/how-to-install-ghost-on-linode-vps/" target="_blank" rel="external">How To Install Ghost On Linode</a></li>
</ol>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.linode.com">Linode.com</a> is a popular choice for a VPS hosting. This post will walk through how to install <a href="http://ghost.org">Ghost</a> on Linode.</p>
<h2 id="Install">Install</h2><h3 id="Install_Node">Install Node</h3><p>Setup with Ubuntu, then install with Ubuntu<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sL http<span class="variable">s:</span>//<span class="keyword">deb</span>.nodesource.<span class="keyword">com</span>/setup | sudo bash -</span><br><span class="line">sudo apt-<span class="built_in">get</span> install -<span class="keyword">y</span> nodejs</span><br><span class="line">node -<span class="keyword">v</span></span><br><span class="line">npm -<span class="keyword">v</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Install_nginx">Install nginx</h3><pre><code>apt-<span class="keyword">get</span> install nginx
</code></pre><h3 id="Download_and_Install_Ghost">Download and Install Ghost</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -<span class="tag">p</span> /var/www/</span><br><span class="line">cd /var/www/</span><br><span class="line">wget -O ghost<span class="class">.zip</span> https:<span class="comment">//ghost.org/zip/ghost-latest.zip</span></span><br><span class="line">unzip -d ghost ghost<span class="class">.zip</span></span><br><span class="line">cd ghost</span><br><span class="line">npm install --production</span><br><span class="line">cp config<span class="class">.example</span><span class="class">.js</span> config.js</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Ghost" scheme="http://jianghao.wang/tags/Ghost/"/>
    
      <category term="Linode" scheme="http://jianghao.wang/tags/Linode/"/>
    
      <category term="Node" scheme="http://jianghao.wang/tags/Node/"/>
    
      <category term="forever" scheme="http://jianghao.wang/tags/forever/"/>
    
      <category term="nginx" scheme="http://jianghao.wang/tags/nginx/"/>
    
      <category term="web" scheme="http://jianghao.wang/tags/web/"/>
    
      <category term="technology" scheme="http://jianghao.wang/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建 Hexo + Github 博客]]></title>
    <link href="http://jianghao.wang/2015/hexo-github/"/>
    <id>http://jianghao.wang/2015/hexo-github/</id>
    <published>2015-05-10T06:13:52.533Z</published>
    <updated>2015-05-10T06:13:52.533Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.v2ex.co/5bb7J7NT.png" alt=""></p>
<h2 id="引言">引言</h2><p>本工作的根本目的是在Github上搭建一个个人博客。其优点是免费，而且可以学习Git。因此本人从今天开始打算将博客平台转移到Github上来。</p>
<p>Github上可以用来搭建博客的工具大概有三个：Hexo, Jekyll, octopress等。但是经过研究发现最好的方式还是采用<code>Github + Hexo</code>的方式，因此这里介绍的方法正是基于该方法。</p>
<p>基于<code>Github + Hexo</code>的博客搭建方法网上有许多教程，可以参考中文的<a href="http://www.zhihu.com/question/20962496" target="_blank" rel="external">详细教程</a>。推荐一下两个网站上的详细教程：</p>
<ol>
<li><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">Hexo主题博客</a></li>
<li><a href="http://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="external">使用GitHub和Hexo搭建免费静态Blog</a></li>
</ol>
<a id="more"></a>
<h2 id="博客的搭建">博客的搭建</h2><p>参考上述的内容1, 2, 3</p>
<ol>
<li>安装<a href="https://windows.github.com/" target="_blank" rel="external">Github for Windows</a></li>
<li>安装<a href="http://nodejs.org/" target="_blank" rel="external">node</a>并设置环境变量：<code>;C:\Program Files\nodejs\node_modules\npm</code></li>
<li><p>安装<code>Hexo</code>：配置好GitHub目录后，在Github目录下新建一个文件 hexo，双击桌面上的<code>Git Shell</code>，输入<code>npm</code>命令即可安装。更多的帮助文件可以参考：<a href="http://hexo.io/zh-cn/docs/" target="_blank" rel="external">http://hexo.io/zh-cn/docs/</a></p>
<pre><code><span class="keyword">cd</span> hexo
npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span>
npm install hexo --<span class="keyword">save</span>
</code></pre></li>
</ol>
<ol>
<li><strong>部署Hexo</strong>：在Git shell 中输入<code>hexo init</code></li>
<li><p><strong>安装Hexo 插件</strong>：非必要步骤</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-archive <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-category <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>测试本地效果</strong>：采用命令： <code>hexo d -g</code>，或<code>hexo generate</code>, <code>hexo server</code>，成功后可登录localhost:4000查看效果。 </p>
</li>
<li><strong>新建仓库</strong>。在<code>Github</code>上新建一个Github Pages，即建立一个仓库New Repository，命名为<code>jianghao.github.io</code>,注意这里必须命名为<code>io</code>，而不是<code>com</code>。因为Github Pages的Repository名字是特定的，比如我Github账号是jianghao，那么我Github Pages Repository名字就是jianghao.github.io。</li>
<li>用Hexo<strong>克隆主题</strong>。首先克隆你想要的主题。一个完整的主题列表可见：<a href="https://github.com/hexojs/hexo/wiki/themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/themes</a> 。个人倾向的主题为：<ul>
<li>英文主题：Codeland</li>
<li>中文主题：Coney<br>具体的方法参考<a href="http://gengbiao.me/hexo/coney%E4%B8%BB%E9%A2%98%E4%BB%8B%E7%BB%8D/" target="_blank" rel="external">coney主题介绍</a></li>
</ul>
</li>
<li>修改与调试<br>启动本地服务：<code>hexo serve</code><br>部署到Github前需要配置_config.yml文件</li>
</ol>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">	<span class="attribute">type</span>: git</span><br><span class="line">	<span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:jianghao/jianghao.github.com.git</span><br><span class="line">	<span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>
<p>如果是为了项目制作网站，需要将branch设置为<code>gh-pages</code>，如果需要绑定域名，需要制作一个<code>cname</code>文件。因为每次deploy的时候hexo都会重新生成文件，所以直接加在github是不好使的，这个文件需要放在 <code>hexo folder/source</code>文件夹根目录下。</p>
<p>执行完，开始部署，即先<code>hexo generate</code>，然后<code>hexo deploy</code>。也可以一部到位：<code>hexo d -g</code></p>
<ol>
<li>将独立域名与GitHub Pages的空间<strong>域名绑定</strong><ul>
<li>Githubpage 设置：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，如<code>jianghao.wang</code>。</li>
<li>DNS设置：注册DNSpod，添加域名，不是必要的步骤，但是据说可以提高解析效率。本人没有测试。</li>
<li>在域名服务商，如<code>net.cn</code>中修改增加两条A记录，指向github pages 提供的 ip<ul>
<li>192.30.252.153</li>
<li>192.30.252.154</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="Hexo_设置">Hexo 设置</h2><p>主要参考：<a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">hexo博客的配置、使用</a></p>
<h3 id="设置_config-yml">设置_config.yml</h3><p>参考上述文章的内容。<a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">hexo博客的配置、使用</a></p>
<h3 id="设置主题配置文件">设置主题配置文件</h3><p>coney主题参考：<a href="http://gengbiao.me/hexo/coney%E4%B8%BB%E9%A2%98%E4%BB%8B%E7%BB%8D/" target="_blank" rel="external">coney主题介绍</a></p>
<p>Next主题参考：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Next 主题</a><br>个人对该主题进行了一些修改，修改后的内容备份在Github 的Gist上：<a href="https://gist.github.com/Jianghao/9197abdb7482c6bf9df7" target="_blank" rel="external">https://gist.github.com/Jianghao/9197abdb7482c6bf9df7</a></p>
<p>内容如下：</p>
<script src="https://gist.github.com/Jianghao/9197abdb7482c6bf9df7.js"></script>


]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://i.v2ex.co/5bb7J7NT.png" alt=""></p>
<h2 id="引言">引言</h2><p>本工作的根本目的是在Github上搭建一个个人博客。其优点是免费，而且可以学习Git。因此本人从今天开始打算将博客平台转移到Github上来。</p>
<p>Github上可以用来搭建博客的工具大概有三个：Hexo, Jekyll, octopress等。但是经过研究发现最好的方式还是采用<code>Github + Hexo</code>的方式，因此这里介绍的方法正是基于该方法。</p>
<p>基于<code>Github + Hexo</code>的博客搭建方法网上有许多教程，可以参考中文的<a href="http://www.zhihu.com/question/20962496">详细教程</a>。推荐一下两个网站上的详细教程：</p>
<ol>
<li><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://zipperary.com/categories/hexo/">Hexo主题博客</a></li>
<li><a href="http://wsgzao.github.io/post/hexo-guide/">使用GitHub和Hexo搭建免费静态Blog</a></li>
</ol>]]>
    
    </summary>
    
      <category term="github" scheme="http://jianghao.wang/tags/github/"/>
    
      <category term="hexo" scheme="http://jianghao.wang/tags/hexo/"/>
    
      <category term="technology" scheme="http://jianghao.wang/categories/technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://jianghao.wang/2015/hello-world/"/>
    <id>http://jianghao.wang/2015/hello-world/</id>
    <published>2015-05-09T08:57:26.571Z</published>
    <updated>2015-05-09T07:14:13.886Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>